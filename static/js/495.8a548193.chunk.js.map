{"version":3,"file":"static/js/495.8a548193.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieDetailsComponent/MovieDetailsComponent.jsx","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const BackWrapper = styled.div`\n  position: sticky;\n  top: 60px;\n  margin-bottom: 10px;\n  padding: 5px 0;\n  background-color: #d8d4fae0;\n`;\n\nexport const StyledLink = styled(Link)`\n  padding: 8px 20px;\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  background-color: #eb9e9edc;\n  color: black;\n  border-radius: 5px;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  transition: color 250ms ease;\n\n  :hover {\n    color: #07d200;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { HiArrowLeft } from 'react-icons/hi';\n\nimport { BackWrapper, StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <BackWrapper>\n      <StyledLink to={to}>\n        <HiArrowLeft size=\"24\" />\n        {children}\n      </StyledLink>\n    </BackWrapper>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  margin-bottom: 10px;\n  display: flex;\n  gap: 5px;\n`;\n\nexport const CardImg = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nexport const CardInfo = styled.div`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport NoImage from 'images/noImage.png';\n\nimport { CardImg, CardInfo, CardWrapper } from './MovieCard.styled';\n\nexport const MovieCard = ({ film }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = film;\n\n  const getMovieGenres = genres => genres.map(genre => genre.name).join(', ');\n\n  return (\n    <CardWrapper>\n      <CardImg\n        src={\n          poster_path\n            ? `https://image.tmdb.org/t/p/w500${poster_path}`\n            : NoImage\n        }\n        alt={original_title}\n      />\n      <CardInfo>\n        <h2>\n          {original_title} ({release_date})\n        </h2>\n        <p>User score: {(vote_average && vote_average.toFixed(1)) || '-'}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres && getMovieGenres(genres)}</p>\n      </CardInfo>\n    </CardWrapper>\n  );\n};\n\nMovieCard.propTypes = {\n  film: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    overview: PropTypes.string,\n    vote_average: PropTypes.number,\n    genres: PropTypes.array,\n  }),\n};\n","import PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\n\nimport { MovieCard } from 'components/MovieCard';\nimport { Loader } from 'components/Loader';\n\nconst MovieDetailsComponent = ({ movie, backLink }) => {\n  return (\n    <>\n      <MovieCard film={movie} />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backLink }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backLink }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetailsComponent;\n\nMovieDetailsComponent.propTypes = {\n  movie: PropTypes.object.isRequired,\n  backLink: PropTypes.object.isRequired,\n};\n","import { useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { fetchMovie } from 'services/api';\nimport { BackLink } from 'components/BackLink';\nimport { Loader } from 'components/Loader';\nimport MovieDetailsComponent from 'components/MovieDetailsComponent';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      try {\n        setLoading(true);\n        const movie = await fetchMovie(movieId);\n        setMovie(movie);\n      } catch (error) {\n        console.log(error);\n\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n      {loading && <Loader />}\n      {error && (\n        <h2>\n          {error}\n          <p>\n            Something went wrong, try reloading the page or come back laterðŸ˜¢\n          </p>\n        </h2>\n      )}\n      {!error && !loading && movie && (\n        <MovieDetailsComponent movie={movie} backLink={backLinkHref} />\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get('trending/movie/day', {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchSearchMovie = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        query: `${query}`,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n"],"names":["BackWrapper","styled","StyledLink","Link","BackLink","to","children","size","CardWrapper","CardImg","CardInfo","MovieCard","film","poster_path","original_title","release_date","vote_average","overview","genres","src","NoImage","alt","toFixed","map","genre","name","join","getMovieGenres","movie","backLink","state","from","Suspense","fallback","Loader","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","backLinkHref","useLocation","useEffect","getMovieById","fetchMovie","console","log","message","axios","fetchTrending","params","api_key","response","data","id","language","Error","fetchSearchMovie","query","results","fetchMovieCast","cast","fetchMovieReviews","page"],"sourceRoot":""}