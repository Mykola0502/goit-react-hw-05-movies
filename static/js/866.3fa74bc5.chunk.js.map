{"version":3,"file":"static/js/866.3fa74bc5.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  color: #0000ff;\n  text-decoration: none;\n  font-weight: 500;\n\n  transition: color 250ms ease;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  :hover {\n    color: #ff4500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { Item, StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <StyledLink to={`/movie/${movie.id}`} state={{ from: location }}>\n            {movie.title || movie.original_title}\n          </StyledLink>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border: 2px solid transparent;\n  border-radius: 5px;\n  overflow: hidden;\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus-within {\n    border: 2px solid #00ff51;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n\n  outline: transparent;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchFormBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n\n  cursor: pointer;\n  outline: none;\n\n  svg {\n    width: 40px;\n    height: 40px;\n    color: #001aff;\n\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover {\n      scale: 1.2;\n      opacity: 1;\n      color: #00ff51;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nimport {\n  Wrapper,\n  SearchForm,\n  SearchInput,\n  SearchFormBtn,\n} from './SearchBox.styled';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [searchInput, setSearchInput] = useState('');\n\n  const handleInputChange = evt => {\n    setSearchInput(evt.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    if (searchInput.trim()) {\n      onSubmit(searchInput);\n      return;\n    }\n    toast.error('Please enter the text in the search field! üîç', {});\n  };\n\n  return (\n    <Wrapper>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchInput\n          name=\"searchInput\"\n          value={searchInput}\n          onChange={handleInputChange}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search a movie by name\"\n        />\n        <SearchFormBtn type=\"submit\">\n          <BiSearchAlt />\n        </SearchFormBtn>\n      </SearchForm>\n    </Wrapper>\n  );\n};\n\nSearchBox.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { MovieList } from 'components/MovieList';\nimport { SearchBox } from 'components/SearchBox';\nimport { Loader } from 'components/Loader';\n\nimport { fetchSearchMovie } from 'services/api';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [notFound, setNotFound] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const handleFormSubmit = search => {\n    setSearchParams({ query: search });\n  };\n\n  useEffect(() => {\n    setNotFound(null);\n    setMovies([]);\n    const searchMovies = async query => {\n      if (!query) {\n        return;\n      }\n\n      try {\n        setLoading(true);\n        const movies = await fetchSearchMovie(query);\n        if (movies.length === 0) {\n          setNotFound('Nothing was found for your request');\n          return;\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    searchMovies(movieName);\n  }, [movieName]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleFormSubmit} />\n      {loading && <Loader />}\n      {error && (\n        <h2>\n          {error}\n          <p>Unable to open the page. Please try again later. üò¢</p>\n        </h2>\n      )}\n\n      {!loading && movies && <MovieList movies={movies} />}\n      {!loading && movies && notFound && <h3>{notFound}</h3>}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get('trending/movie/day', {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchSearchMovie = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        query: `${query}`,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n"],"names":["Item","styled","StyledLink","Link","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","original_title","Wrapper","SearchForm","SearchInput","SearchFormBtn","SearchBox","onSubmit","useState","searchInput","setSearchInput","evt","preventDefault","trim","toast","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","type","setMovies","notFound","setNotFound","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","searchMovies","query","fetchSearchMovie","length","console","log","message","search","Loader","axios","fetchTrending","params","api_key","response","data","fetchMovie","language","Error","results","fetchMovieCast","cast","fetchMovieReviews","page"],"sourceRoot":""}