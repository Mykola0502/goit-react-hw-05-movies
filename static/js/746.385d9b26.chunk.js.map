{"version":3,"file":"static/js/746.385d9b26.chunk.js","mappings":"0SAEaA,EAAOC,EAAAA,GAAAA,GAAH,wGAOJC,EAAgBD,EAAAA,GAAAA,IAAH,6EAMbE,EAAYF,EAAAA,GAAAA,IAAH,8E,SCoDtB,EA1DgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,oGAEnBJ,GAAW,GAFQ,UAGQK,EAAAA,EAAAA,IAAkBR,GAH1B,OAGbS,EAHa,OAInBV,EAAWU,GAJQ,gDAMnBC,QAAQC,IAAR,MACAN,EAAS,KAAMO,SAPI,yBASnBT,GAAW,GATQ,4EAAH,qDAapBI,GACD,GAAE,CAACP,KAGF,gCACGE,IAAW,SAACW,EAAA,EAAD,IACXT,IACC,0BACGA,GACD,6FAGJ,SAACX,EAAD,UACGK,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACX,2BACE,UAACvB,EAAD,YACE,SAACC,EAAD,CACEuB,IACEH,EAAeI,YAAf,yCACsCJ,EAAeI,aACjDC,EAENC,IAAKL,KAEP,4BACE,sCACA,wBAAKA,WAIT,uBAAIC,MAhBGH,EADE,QAuBpB,C,mMC/DDQ,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,6GAEFD,EAAAA,EAAAA,IAAU,qBAAsB,CACrDE,OAAQ,CACNC,QAAS,sCAJY,cAEnBC,EAFmB,yBAOlBA,EAASC,MAPS,gCASzBlB,QAAQC,IAAR,MATyB,yDAAH,qDAabkB,EAAU,mCAAG,WAAMd,GAAN,gGAECQ,EAAAA,EAAAA,IAAA,gBAAmBR,GAAM,CAC9CU,OAAQ,CACNC,QAAS,mCACTI,SAAU,WALQ,cAEhBH,EAFgB,yBAQfA,EAASC,MARM,sCAUhB,IAAIG,MAAJ,MAVgB,yDAAH,sDAcVC,EAAgB,mCAAG,WAAMC,GAAN,gGAELV,EAAAA,EAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,QAAS,mCACTI,SAAU,QACVG,MAAM,GAAD,OAAKA,MANc,cAEtBN,EAFsB,yBASrBA,EAASC,KAAKM,SATO,sCAW5BxB,QAAQC,IAAR,MACM,IAAIoB,MAAJ,MAZsB,yDAAH,sDAgBhBI,EAAc,mCAAG,WAAMpB,GAAN,gGAEHQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,YAAiC,CACtDU,OAAQ,CACNC,QAAS,mCACTI,SAAU,WALY,cAEpBH,EAFoB,yBAQnBA,EAASC,KAAKQ,MARK,sCAU1B1B,QAAQC,IAAR,MACM,IAAIoB,MAAJ,MAXoB,yDAAH,sDAedvB,EAAiB,mCAAG,WAAMO,GAAN,gGAENQ,EAAAA,EAAAA,IAAA,gBAAmBR,EAAnB,YAAiC,CACtDU,OAAQ,CACNC,QAAS,mCACTI,SAAU,QACVO,KAAM,KANmB,cAEvBV,EAFuB,yBAStBA,EAASC,KAAKM,SATQ,sCAW7BxB,QAAQC,IAAR,MACM,IAAIoB,MAAJ,MAZuB,yDAAH,qD","sources":["components/Reviews/Reviews.styed.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  list-style: none;\n`;\n\nexport const AuthorWrapper = styled.div`\n  display: flex;\n  gap: 15px;\n  list-style: none;\n`;\n\nexport const AuthorImg = styled.img`\n  width: 30px;\n  height: auto;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from 'services/api';\n\nimport { Loader } from 'components/Loader';\nimport NoImage from 'images/noImage.png';\nimport { AuthorImg, AuthorWrapper, List } from './Reviews.styed';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviewsById = async () => {\n      try {\n        setLoading(true);\n        const movieReviews = await fetchMovieReviews(movieId);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getReviewsById();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && (\n        <h2>\n          {error}\n          <p>Unable to open the page. Please try again later. ðŸ˜¢</p>\n        </h2>\n      )}\n      <List>\n        {reviews.map(({ id, author_details, author, content }) => (\n          <li key={id}>\n            <AuthorWrapper>\n              <AuthorImg\n                src={\n                  author_details.avatar_path\n                    ? `https://image.tmdb.org/t/p/w500${author_details.avatar_path}`\n                    : NoImage\n                }\n                alt={author}\n              />\n              <div>\n                <h4>Author: </h4>\n                <h5>{author}</h5>\n              </div>\n            </AuthorWrapper>\n\n            <p>{content}</p>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get('trending/movie/day', {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchSearchMovie = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        query: `${query}`,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n"],"names":["List","styled","AuthorWrapper","AuthorImg","useState","reviews","setReviews","movieId","useParams","loading","setLoading","error","setError","useEffect","getReviewsById","fetchMovieReviews","movieReviews","console","log","message","Loader","map","id","author_details","author","content","src","avatar_path","NoImage","alt","axios","fetchTrending","params","api_key","response","data","fetchMovie","language","Error","fetchSearchMovie","query","results","fetchMovieCast","cast","page"],"sourceRoot":""}