{"version":3,"file":"static/js/415.55eec36e.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,GAAAA,GAAH,+LAWJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,2U,SCTVG,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OADAC,QAAQC,WAAWJ,IAEjB,wBACGA,EAAOK,KAAI,SAAAC,GAAK,OACf,SAACX,EAAD,WACE,SAACE,EAAD,CAAYU,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAArD,SACGK,EAAMK,SAFAL,EAAME,GADF,KAStB,C,0HCkCD,UA/Ca,WACX,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KA6BA,OA3BAC,EAAAA,EAAAA,YAAU,WAGR,IAAMC,EAAiB,mCAAG,oGAEtBJ,GAAW,GAFW,UAGDK,EAAAA,EAAAA,MAHC,OAGhBpB,EAHgB,OAKtBa,EAAUb,EAAOqB,SALK,gDAOtBlB,QAAQC,IAAI,KAAMkB,SAClBnB,QAAQC,IAAR,MAEAa,EAAS,KAAMK,SAVO,yBAatBP,GAAW,GAbW,4EAAH,qDAiBvBI,GAKD,GAAE,KAGD,6BACE,2CACCL,IAAW,SAAC,IAAD,IACXd,IAAU,SAAC,IAAD,CAAWA,OAAQA,IAC7BgB,IACC,0BACGA,GACD,sEAKT,C,mMCjDDO,EAAAA,EAAAA,SAAAA,QAAyB,gCAIlB,IAAMH,EAAa,mCAAG,6GAEFG,EAAAA,EAAAA,IAAU,qBAAsB,CACrDC,OAAQ,CACNC,QAAS,sCAJY,cAEnBC,EAFmB,yBAQlBA,EAASC,MARS,gCAWzBxB,QAAQC,IAAR,MAXyB,yDAAH,qDAiBbwB,EAAU,mCAAG,WAAMpB,GAAN,gGAECe,EAAAA,EAAAA,IAAA,gBAAmBf,GAAM,CAC9CgB,OAAQ,CACNC,QAAS,mCACTI,SAAU,WALQ,cAEhBH,EAFgB,yBAQfA,EAASC,MARM,sCAUhB,IAAIG,MAAJ,MAVgB,yDAAH,sDAgBVC,EAAgB,mCAAG,WAAMC,GAAN,gGAELT,EAAAA,EAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAAS,mCACTI,SAAU,QACVG,MAAM,GAAD,OAAKA,MANc,cAEtBN,EAFsB,yBAWrBA,EAASC,KAAKN,SAXO,sCAa5BlB,QAAQC,IAAR,MACM,IAAI0B,MAAJ,MAdsB,yDAAH,sDAkBhBG,EAAc,mCAAG,WAAMzB,GAAN,gGAEHe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,YAAiC,CACtDgB,OAAQ,CACNC,QAAS,mCACTI,SAAU,WALY,cAEpBH,EAFoB,yBAQnBA,EAASC,KAAKO,MARK,sCAU1B/B,QAAQC,IAAR,MACM,IAAI0B,MAAJ,MAXoB,yDAAH,sDAedK,EAAiB,mCAAG,WAAM3B,GAAN,gGAENe,EAAAA,EAAAA,IAAA,gBAAmBf,EAAnB,YAAiC,CACtDgB,OAAQ,CACNC,QAAS,mCACTI,SAAU,QACVO,KAAM,KANmB,cAEvBV,EAFuB,yBAStBA,EAASC,KAAKN,SATQ,sCAW7BlB,QAAQC,IAAR,MACM,IAAI0B,MAAJ,MAZuB,yDAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  /* display: inline-flex; */\n  /* align-items: center; */\n  /* padding: 5px 0; */\n  /* color: #000000; */\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  /* padding: 5px 0; */\n  color: #0000ff;\n  text-decoration: none;\n  font-weight: 500;\n  /* text-transform: uppercase; */\n\n  transition: color 250ms ease;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  :hover {\n    color: #ff4500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { Item, StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  console.log(typeof movies);\n  return (\n    <ul>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <StyledLink to={`/movie/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </StyledLink>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { fetchTrending } from 'services/api';\nimport { Loader } from 'components/Loader';\nimport { MovieList } from 'components/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // const controller = new AbortController();\n\n    const getMoviesTrending = async () => {\n      try {\n        setLoading(true);\n        const movies = await fetchTrending();\n        //   {signal: controller.signal;}\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error.message);\n        console.log(error);\n\n        setError(error.message);\n        // setError('No films found, try againðŸ˜¢');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMoviesTrending();\n\n    // return () => {\n    //   controller.abort();\n    // };\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && (\n        <h2>\n          {error}\n          <p>No films found, try againðŸ˜¢</p>\n        </h2>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// const controller = new AbortController();\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get('trending/movie/day', {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        // signal: controller.signal,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    // throw new Error(error.message);\n    console.log(error);\n  }\n};\n\n// controller.abort();\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n    // console.log(error);\n    // return error;\n  }\n};\n\nexport const fetchSearchMovie = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        query: `${query}`,\n        // page: 1,\n        // include_adult: false,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n"],"names":["Item","styled","StyledLink","Link","MovieList","movies","location","useLocation","console","log","map","movie","to","id","state","from","title","useState","setMovies","loading","setLoading","error","setError","useEffect","getMoviesTrending","fetchTrending","results","message","axios","params","api_key","response","data","fetchMovie","language","Error","fetchSearchMovie","query","fetchMovieCast","cast","fetchMovieReviews","page"],"sourceRoot":""}