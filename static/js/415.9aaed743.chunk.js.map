{"version":3,"file":"static/js/415.9aaed743.chunk.js","mappings":"sNAGaA,EAAOC,EAAAA,GAAAA,GAAH,8EAMJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,8Q,SCJVG,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACT,EAAD,WACE,SAACE,EAAD,CAAYQ,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACGG,EAAMK,OAASL,EAAMM,kBAFfN,EAAME,GADF,KAStB,C,0HC2BD,UAvCa,WACX,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBJ,GAAW,GAFW,UAGDK,EAAAA,EAAAA,MAHC,OAGhBnB,EAHgB,OAItBY,EAAUZ,EAAOoB,SAJK,gDAMtBC,QAAQC,IAAI,KAAMC,SAClBF,QAAQC,IAAR,MAEAN,EAAS,KAAMO,SATO,yBAWtBT,GAAW,GAXW,4EAAH,qDAevBI,GACD,GAAE,KAGD,6BACE,2CACCL,IAAW,SAAC,IAAD,IACXb,IAAU,SAAC,IAAD,CAAWA,OAAQA,IAC7Be,IACC,0BACGA,GACD,sEAKT,C,mMCzCDS,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAML,EAAa,mCAAG,6GAEFK,EAAAA,EAAAA,IAAU,qBAAsB,CACrDC,OAAQ,CACNC,QAAS,sCAJY,cAEnBC,EAFmB,yBAOlBA,EAASC,MAPS,gCASzBP,QAAQC,IAAR,MATyB,yDAAH,qDAabO,EAAU,mCAAG,WAAMvB,GAAN,gGAECkB,EAAAA,EAAAA,IAAA,gBAAmBlB,GAAM,CAC9CmB,OAAQ,CACNC,QAAS,mCACTI,SAAU,WALQ,cAEhBH,EAFgB,yBAQfA,EAASC,MARM,sCAUhB,IAAIG,MAAJ,MAVgB,yDAAH,sDAcVC,EAAgB,mCAAG,WAAMC,GAAN,gGAELT,EAAAA,EAAAA,IAAA,eAA0B,CAC/CC,OAAQ,CACNC,QAAS,mCACTI,SAAU,QACVG,MAAM,GAAD,OAAKA,MANc,cAEtBN,EAFsB,yBASrBA,EAASC,KAAKR,SATO,sCAW5BC,QAAQC,IAAR,MACM,IAAIS,MAAJ,MAZsB,yDAAH,sDAgBhBG,EAAc,mCAAG,WAAM5B,GAAN,gGAEHkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAiC,CACtDmB,OAAQ,CACNC,QAAS,mCACTI,SAAU,WALY,cAEpBH,EAFoB,yBAQnBA,EAASC,KAAKO,MARK,sCAU1Bd,QAAQC,IAAR,MACM,IAAIS,MAAJ,MAXoB,yDAAH,sDAedK,EAAiB,mCAAG,WAAM9B,GAAN,gGAENkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAiC,CACtDmB,OAAQ,CACNC,QAAS,mCACTI,SAAU,QACVO,KAAM,KANmB,cAEvBV,EAFuB,yBAStBA,EAASC,KAAKR,SATQ,sCAW7BC,QAAQC,IAAR,MACM,IAAIS,MAAJ,MAZuB,yDAAH,qD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  color: #0000ff;\n  text-decoration: none;\n  font-weight: 500;\n\n  transition: color 250ms ease;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n\n  :hover {\n    color: #ff4500;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useLocation } from 'react-router-dom';\nimport { Item, StyledLink } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <StyledLink to={`/movie/${movie.id}`} state={{ from: location }}>\n            {movie.title || movie.original_title}\n          </StyledLink>\n        </Item>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      original_title: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { fetchTrending } from 'services/api';\nimport { Loader } from 'components/Loader';\nimport { MovieList } from 'components/MovieList';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getMoviesTrending = async () => {\n      try {\n        setLoading(true);\n        const movies = await fetchTrending();\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(error.message);\n        console.log(error);\n\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMoviesTrending();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && (\n        <h2>\n          {error}\n          <p>No films found, try againðŸ˜¢</p>\n        </h2>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  try {\n    const response = await axios.get('trending/movie/day', {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovie = async id => {\n  try {\n    const response = await axios.get(`movie/${id}`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport const fetchSearchMovie = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        query: `${query}`,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n\nexport const fetchMovieReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: '9e9058c72b8ee0828aa8b191435a8696',\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error);\n  }\n};\n"],"names":["Item","styled","StyledLink","Link","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","original_title","useState","setMovies","loading","setLoading","error","setError","useEffect","getMoviesTrending","fetchTrending","results","console","log","message","axios","params","api_key","response","data","fetchMovie","language","Error","fetchSearchMovie","query","fetchMovieCast","cast","fetchMovieReviews","page"],"sourceRoot":""}